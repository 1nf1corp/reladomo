/*
 Copyright 2016 Goldman Sachs.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 */

/* Generated By:JJTree: Do not edit this line. ASTInLiteral.java */

package com.gs.fw.common.mithra.generator.queryparser;

public class ASTInLiteral extends SimpleNode
{
	private String value;
    private String finderString;
    private boolean isJavaLiteral;

	public ASTInLiteral(int id)
	{
		super(id);
	}

	public ASTInLiteral(MithraQL p, int id)
	{
		super(p, id);
	}
	/**
	 * Accept the visitor. *
	 */
	public Object jjtAccept(MithraQLVisitor visitor, Object data)
	{
		return visitor.visit(this, data);
	}

	public String getValue()
	{
		return value;
	}

	public void setValue(String value)
	{
		this.value = value;
	}

	public String getFinderString()
	{
		return finderString;
	}

	public void setFinderString(String finderString)
	{
		this.finderString = finderString;
	}

    public void setIsJavaLiteral(boolean value)
    {
        this.isJavaLiteral = value;
        if (value)
        {
            this.value = this.value.substring(1, this.value.length() - 1); // remove { and } 
        }
    }

    public boolean isJavaLiteral()
    {
        return isJavaLiteral;
    }

    public boolean equalsOther(SimpleNode other)
    {
        if (other instanceof ASTInLiteral)
        {
            ASTInLiteral lit = (ASTInLiteral) other;
            return this.isJavaLiteral() == lit.isJavaLiteral() && this.getValue().equals(lit.getValue());
        }
        return false;
    }

}
